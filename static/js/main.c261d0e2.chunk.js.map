{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isVisible","setIsVisible","isReversed","setIsReversed","sortBy","setSortBy","className","classNames","showGoods","sort","a","b","length","el1","el2","localeCompare","reverse","visibleGoods","map","good","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"0OAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqGaC,EAlGO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KA8CA,OACE,sBAAKC,UAAU,MAAf,UACE,uCACA,oBAAIA,UACFC,IACE,OACA,CAAE,iBAAkBP,IAHxB,SA1BiB,WACnB,IAAMQ,EAAS,UAAOX,GAEtB,OAAQO,GACN,IAAK,SACHI,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACtC,MAEF,IAAK,WACHJ,EAAUC,MAAK,SAACI,EAAKC,GAAN,OAAcD,EAAIE,cAAcD,MAWnD,OAJIZ,GACFM,EAAUQ,UAGLR,EAaFS,GAAeC,KAAI,SAACC,GAAD,OAAU,6BAAgBA,GAAPA,QAEzC,sBAAKb,UAAU,gBAAf,UACE,wBACEc,KAAK,SACLC,QA3DK,WACXpB,GAAa,IA2DPK,UAAWN,EAAY,gBAAkB,GAH3C,mBAOA,wBACEoB,KAAK,SACLC,QAtDS,WACflB,GAAeD,IAmDX,qBAMA,wBACEkB,KAAK,SACLC,QApEa,WACnBhB,EAAU,aAiEN,6BAMA,wBACEe,KAAK,SACLC,QAtEW,WACjBhB,EAAU,WAmEN,4BAMA,wBACEe,KAAK,SACLC,QApEM,WACZlB,GAAc,GACdE,EAAU,KAgEN,0BCrGRiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c261d0e2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n\n  const show = () => {\n    setIsVisible(true);\n  };\n\n  const sortAlphabet = () => {\n    setSortBy('alphabet');\n  };\n\n  const sortLength = () => {\n    setSortBy('length');\n  };\n\n  const reversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy('');\n  };\n\n  const visibleGoods = () => {\n    const showGoods = [...goodsFromServer];\n\n    switch (sortBy) {\n      case 'length':\n        showGoods.sort((a, b) => a.length - b.length);\n        break;\n\n      case 'alphabet':\n        showGoods.sort((el1, el2) => el1.localeCompare(el2));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      showGoods.reverse();\n    }\n\n    return showGoods;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      <ul className={\n        classNames(\n          'List',\n          { 'List--visible': !isVisible },\n        )\n      }\n      >\n        {visibleGoods().map((good) => <li key={good}>{good}</li>)}\n      </ul>\n      <div className=\"List__buttons\">\n        <button\n          type=\"submit\"\n          onClick={show}\n          className={isVisible ? 'button-hidden' : ''}\n        >\n          Start\n        </button>\n        <button\n          type=\"submit\"\n          onClick={reversed}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"submit\"\n          onClick={sortAlphabet}\n        >\n          Sort by Alpabet\n        </button>\n        <button\n          type=\"submit\"\n          onClick={sortLength}\n        >\n          Sort by Length\n        </button>\n        <button\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}